/**
  * vee-validate v4.5.11
  * (c) 2022 Abdelrahman Awad
  * @license MIT
  */
!function(e,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports):"function"==typeof define&&define.amd?define(["exports"],o):o((e="undefined"!=typeof globalThis?globalThis:e||self).VeeValidateI18n={})}(this,(function(e){"use strict";function o(e){return"function"==typeof e}function n(e,o){return e.replace(/(\d:)?{([^}]+)}/g,(function(e,n,i){if(!n||!o.params)return i in o?o[i]:o.params&&i in o.params?o.params[i]:`{${i}}`;if(!Array.isArray(o.params))return i in o.params?o.params[i]:`{${i}}`;const t=Number(n.replace(":",""));return t in o.params?o.params[t]:`${n}{${i}}`}))}function i(e,o){return Object.keys(o).forEach((n=>{if(null!==(t=o[n])&&t&&"object"==typeof t&&!Array.isArray(t))return e[n]||(e[n]={}),void i(e[n],o[n]);var t;e[n]=o[n]})),e}class t{constructor(e,o){this.container={},this.locale=e,this.merge(o)}resolve(e){return this.format(this.locale,e)}getLocaleDefault(e,o){var n,i,t,a,l;return(null===(t=null===(i=null===(n=this.container[e])||void 0===n?void 0:n.fields)||void 0===i?void 0:i[o])||void 0===t?void 0:t._default)||(null===(l=null===(a=this.container[e])||void 0===a?void 0:a.messages)||void 0===l?void 0:l._default)}format(e,i){var t,a,l,r,s,c,d,u;let f;const{field:v,rule:m,form:p}=i,h=null!==(l=null===(a=null===(t=this.container[e])||void 0===t?void 0:t.names)||void 0===a?void 0:a[v])&&void 0!==l?l:v;return m?(f=(null===(c=null===(s=null===(r=this.container[e])||void 0===r?void 0:r.fields)||void 0===s?void 0:s[v])||void 0===c?void 0:c[m.name])||(null===(u=null===(d=this.container[e])||void 0===d?void 0:d.messages)||void 0===u?void 0:u[m.name]),f||(f=this.getLocaleDefault(e,v)||`${h} is not valid`),o(f)?f(i):n(f,Object.assign(Object.assign({},p),{field:h,params:m.params}))):(f=this.getLocaleDefault(e,v)||`${h} is not valid`,o(f)?f(i):n(f,Object.assign(Object.assign({},p),{field:h})))}merge(e){i(this.container,e)}}let a;function l(e,o){a||(a=new t("en",{}));const n=e=>a.resolve(e);return"string"==typeof e?(a.locale=e,o&&a.merge({[e]:o}),n):(a.merge(e),n)}e.loadLocaleFromURL=async function(e){try{const o=await fetch(e,{headers:{"content-type":"application/json"}}).then((e=>e.json()));if(!o.code)return void console.error("Could not identify locale, ensure the locale file contains `code` field");l({[o.code]:o})}catch(e){console.error("Failed to load locale ")}},e.localize=l,e.setLocale=function(e){a.locale=e},Object.defineProperty(e,"__esModule",{value:!0})}));